import { Account, Address, AssetId, BigNumberish, ScriptTransactionRequest, TxParams } from "fuels";
import { PoolId } from "./model";
export declare class MiraAmm {
    private readonly account;
    private readonly ammContract;
    private readonly addLiquidityScriptLoader;
    private readonly createPoolAndAddLiquidityScriptLoader;
    private readonly removeLiquidityScriptLoader;
    private readonly swapExactInputScriptLoader;
    private readonly swapExactOutputScriptLoader;
    constructor(account: Account, contractIdOpt?: string);
    static deploy(wallet: Account): Promise<MiraAmm>;
    id(): string;
    addLiquidity(poolId: PoolId, amountADesired: BigNumberish, amountBDesired: BigNumberish, amountAMin: BigNumberish, amountBMin: BigNumberish, deadline: BigNumberish, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    createPoolAndAddLiquidity(tokenAContract: string, tokenASubId: string, tokenBContract: string, tokenBSubId: string, isStable: boolean, amountADesired: BigNumberish, amountBDesired: BigNumberish, deadline: BigNumberish, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    createPool(tokenAContract: string, tokenASubId: string, tokenBContract: string, tokenBSubId: string, isStable: boolean, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    removeLiquidity(poolId: PoolId, liquidity: BigNumberish, amountAMin: BigNumberish, amountBMin: BigNumberish, deadline: BigNumberish, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    swapExactInput(amountIn: BigNumberish, assetIn: AssetId, amountOutMin: BigNumberish, pools: PoolId[], deadline: BigNumberish, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    swapExactOutput(amountOut: BigNumberish, assetOut: AssetId, amountInMax: BigNumberish, pools: PoolId[], deadline: BigNumberish, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    transferOwnership(newOwner: Address, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    setHook(newAddress?: string, txParams?: TxParams): Promise<ScriptTransactionRequest>;
    private fundRequest;
    private prepareRequest;
}
