import { AssetId, BigNumberish, BN, Provider } from "fuels";
import { MiraAmmContract } from "./typegen/MiraAmmContract";
import { AmmFees, AmmMetadata, Asset, LpAssetInfo, PoolId, PoolMetadata } from "./model";
export declare class ReadonlyMiraAmm {
    provider: Provider;
    ammContract: MiraAmmContract;
    constructor(provider: Provider, contractIdOpt?: string);
    id(): string;
    ammMetadata(): Promise<AmmMetadata>;
    poolMetadata(poolId: PoolId): Promise<PoolMetadata | null>;
    fees(): Promise<AmmFees>;
    hook(): Promise<string | null>;
    totalAssets(): Promise<BN>;
    lpAssetInfo(assetId: AssetId): Promise<LpAssetInfo | null>;
    totalSupply(assetId: AssetId): Promise<BN | undefined>;
    owner(): Promise<string | null>;
    getOtherTokenToAddLiquidity(poolId: PoolId, amount: BigNumberish, isFirstToken: boolean): Promise<Asset>;
    getLiquidityPosition(poolId: PoolId, lpTokensAmount: BigNumberish): Promise<[Asset, Asset]>;
    getAmountsOut(assetIdIn: AssetId, assetAmountIn: BigNumberish, pools: PoolId[]): Promise<Asset[]>;
    getAmountsIn(assetIdOut: AssetId, assetAmountOut: BigNumberish, pools: PoolId[]): Promise<Asset[]>;
    previewSwapExactInput(assetIdIn: AssetId, assetAmountIn: BigNumberish, pools: PoolId[]): Promise<Asset>;
    previewSwapExactOutput(assetIdOut: AssetId, assetAmountOut: BigNumberish, pools: PoolId[]): Promise<Asset>;
    getCurrentRate(assetId: AssetId, pools: PoolId[]): Promise<[number, number?, number?]>;
}
