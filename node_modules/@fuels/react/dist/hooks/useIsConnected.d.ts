import { type UseNamedQueryParams } from '../core';
type UseIsConnected = {
    /**
     * Additional query parameters to customize the behavior of `useNamedQuery`.
     */
    query?: UseNamedQueryParams<'network', boolean, Error, boolean>;
};
/**
 * A hook to check the connection status with the connector.
 *
 * @returns {object} An object containing:
 * - `isConnected`: A boolean value indicating the connector is connected.
 * - {@link https://tanstack.com/query/latest/docs/framework/react/reference/useQuery | `...queryProps`}: Destructured properties from `useQuery` result.
 *
 * @examples
 *  To check if a connection is established:
 * ```ts
 * const { isConnected } = useIsConnected();
 * ```
 */
export declare const useIsConnected: (params?: UseIsConnected) => import("../core").DefinedNamedUseQueryResult<"isConnected", boolean, Error>;
export {};
