import type * as fuels from 'fuels';
/**
 * A hook to fetch transaction details using a transaction ID.
 *
 * @params {string} The parameters to fetch the transaction.
 * - `txId`: A string value representing the transaction ID.
 *
 * @returns {object} An object containing:
 * - `transaction`: The transaction details retrieved from the provider, or `null` if not found.
 * - {@link https://tanstack.com/query/latest/docs/framework/react/reference/useQuery | `...queryProps`}: Destructured properties from `useQuery` result.
 *
 * @examples
 * To fetch transaction details:
 * ```ts
 * const { transaction, error, isLoading } = useTransaction('0x1234');
 * ```
 */
export declare const useTransaction: (txId?: string) => import("../core").DefinedNamedUseQueryResult<"transaction", (Partial<Omit<fuels.TransactionScript, "type">> & Partial<Omit<fuels.TransactionCreate, "type">> & Partial<Omit<fuels.TransactionMint, "type">> & Partial<Omit<fuels.TransactionUpgrade, "type">> & Partial<Omit<fuels.TransactionUpload, "type">> & Partial<Omit<fuels.TransactionBlob, "type">> & {
    type: fuels.TransactionType;
}) | null, Error>;
