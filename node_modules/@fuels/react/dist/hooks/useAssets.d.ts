import type { Asset } from 'fuels';
import { type UseNamedQueryParams } from '../core';
type UseAssetsParams<TName extends string, TData> = {
    /**
     * Additional query parameters to customize the behavior of `useNamedQuery`.
     */
    query?: UseNamedQueryParams<TName, TData, Error, TData>;
};
/**
 * A hook that returns assets of the user in the connected app.
 *
 * @returns {object} An object containing
 * - `assets`: User's assets.
 * - {@link https://tanstack.com/query/latest/docs/framework/react/reference/useQuery | `...queryProps`}: Destructured properties from `useQuery` result.
 *
 * @examples
 * ```ts
 * const { assets } = useAssets();
 * console.log(assets);
 * ```
 */
export declare const useAssets: (params?: UseAssetsParams<'assets', Asset[]>) => import("../core").DefinedNamedUseQueryResult<"assets", Asset[], Error>;
export {};
