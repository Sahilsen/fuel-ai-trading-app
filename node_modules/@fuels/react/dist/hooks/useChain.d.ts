import type { ChainInfo } from 'fuels';
import type { UseNamedQueryParams } from '../core';
type UseChainParams<TName extends string, TData> = {
    /**
     * Additional query parameters to customize the behavior of `useNamedQuery`.
     */
    query?: UseNamedQueryParams<TName, TData, Error, TData>;
};
/**
 * A hook that returns the chain info for the current provider.
 *
 * @returns {object} An object containing:
 * - `chain`: The current chain info.
 * - {@link https://tanstack.com/query/latest/docs/framework/react/reference/useQuery | `...queryProps`}: Destructured properties from `useQuery` result.
 *
 * @examples
 * ```ts
 * const { chain } = useChain();
 * console.log(chain);
 * ```
 */
export declare const useChain: (params?: UseChainParams<'chain', ChainInfo | null>) => import("../core").DefinedNamedUseQueryResult<"chain", ChainInfo | null, Error>;
export {};
