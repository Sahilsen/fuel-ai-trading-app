import { type UseNamedQueryParams } from '../core';
type UseAccountParams<TName extends string, TData> = {
    /**
     * Additional query parameters to customize the behavior of `useNamedQuery`.
     */
    query?: UseNamedQueryParams<TName, TData, Error, TData>;
};
/**
 * A hook to get the current account of the user in the connected app.
 *
 * @returns {object} An object containing:
 * - `account`: The current account of the user.
 * - {@link https://tanstack.com/query/latest/docs/framework/react/reference/useQuery | `...queryProps`}: Destructured properties from `useQuery` result.
 *
 * @examples
 * ```ts
 * const { account } = useAccount();
 * console.log(account);
 * ```
 */
export declare const useAccount: (params?: UseAccountParams<'account', string | null>) => import("../core").DefinedNamedUseQueryResult<"account", string | null, Error>;
export {};
