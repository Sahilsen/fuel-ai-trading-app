import type { FuelConnector } from 'fuels';
import { type UseNamedQueryParams } from '../core';
type UseCurrentConnectorParams<TName extends string, TData> = {
    /**
     * Additional query parameters to customize the behavior of `useNamedQuery`.
     */
    query?: UseNamedQueryParams<TName, FuelConnector | null, Error, TData>;
};
/**
 * A hook to fetch a current Wallet Connector.
 *
 * @params {UseCurrentConnectorParams<TName, TData>} Parameters to configure the hook.
 * - `query`: Additional query parameters to customize the behavior of `useNamedQuery`.
 *
 * @returns {object} An object containing:
 * - `connectors`: The list of available connectors.
 * - {@link https://tanstack.com/query/latest/docs/framework/react/reference/useQuery | `...queryProps`}: Destructured properties from `useQuery` result.
 *
 * @examples
 * To fetch current connector:
 * ```ts
 * const { currentConnector } = useCurrentConnector();
 * console.log(currentConnector);
 * ```
 */
export declare const useCurrentConnector: <TName extends string = string, TData = FuelConnector | null>({ query, }?: UseCurrentConnectorParams<TName, TData>) => import("../core").DefinedNamedUseQueryResult<"currentConnector", TData, Error>;
export {};
